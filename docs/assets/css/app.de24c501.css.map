{"version":3,"sources":["webpack:///src/C:/Users/Shure/projects/wats4000/wats4000-caching-data/src/src/App.vue","app.de24c501.css","webpack:///src/components/C:/Users/Shure/projects/wats4000/wats4000-caching-data/src/components/src/components/WeatherSummary.vue","webpack:///src/components/C:/Users/Shure/projects/wats4000/wats4000-caching-data/src/components/src/components/WeatherData.vue","webpack:///src/components/C:/Users/Shure/projects/wats4000/wats4000-caching-data/src/components/src/components/CubeSpinner.vue","webpack:///src/components/C:/Users/Shure/projects/wats4000/wats4000-caching-data/src/components/src/components/MessageItem.vue","webpack:///src/components/C:/Users/Shure/projects/wats4000/wats4000-caching-data/src/components/src/components/MessageContainer.vue","webpack:///src/components/C:/Users/Shure/projects/wats4000/wats4000-caching-data/src/components/src/components/FavoriteCities.vue","webpack:///src/views/C:/Users/Shure/projects/wats4000/wats4000-caching-data/src/views/src/views/CitySearch.vue","webpack:///src/views/C:/Users/Shure/projects/wats4000/wats4000-caching-data/src/views/src/views/CurrentWeather.vue","webpack:///src/views/C:/Users/Shure/projects/wats4000/wats4000-caching-data/src/views/src/views/Forecast.vue"],"names":[],"mappings":"AAcA,KACA,6CAAA,CACA,kCAAA,CACA,iCAAA,CACA,aAAA,CACA,SAAA,CACA,gBCZA,CCiBA,iCACA,oBAAA,CACA,WDbA,CEcA,oBACA,WAAA,CACA,kBFVA,CEYA,oBACA,UAAA,CACA,UAAA,CACA,WAAA,CACA,gBAAA,CACA,eAAA,CACA,UFVA,CEYA,oBACA,kBAAA,CACA,kBFVA,CEYA,0BACA,WFVA,CGhBA,kCACA,gBAAA,CACA,UAAA,CACA,WAAA,CACA,iBAAA,CACA,+BAAA,CACA,uBHoBA,CGjBA,2CACA,UAAA,CACA,SAAA,CACA,UAAA,CACA,iBAAA,CACA,4BAAA,CAEA,oBHkBA,CGhBA,kDACA,UAAA,CACA,iBAAA,CACA,KAAA,CACA,MAAA,CACA,UAAA,CACA,WAAA,CACA,qBAAA,CACA,4EAAA,CACA,oEAAA,CACA,kCAAA,CAEA,0BHiBA,CGfA,4CACA,0CAAA,CACA,kCHiBA,CGfA,4CACA,2CAAA,CACA,mCHiBA,CGfA,4CACA,2CAAA,CACA,mCHiBA,CGfA,mDACA,2BAAA,CACA,mBHiBA,CGfA,mDACA,2BAAA,CACA,mBHiBA,CGfA,mDACA,2BAAA,CACA,mBHiBA,CGfA,oDACA,OACA,qDAAA,CACA,6CAAA,CACA,SHiBA,CGhBA,QACA,kDAAA,CACA,0CAAA,CACA,SHkBA,CGjBA,OACA,oDAAA,CACA,4CAAA,CACA,SHmBA,CACA,CGhBA,4CACA,OACA,qDAAA,CACA,6CAAA,CACA,SHkBA,CGjBA,QACA,kDAAA,CACA,0CAAA,CACA,SHmBA,CGlBA,OACA,oDAAA,CACA,4CAAA,CACA,SHoBA,CACA,CItFA,0BACA,eAAA,CACA,WAAA,CACA,cAAA,CACA,SJ2FA,CIzFA,wBACA,eAAA,CACA,SJ2FA,CIzFA,0BACA,gBAAA,CACA,UJ2FA,CIzFA,uBACA,eAAA,CACA,UJ2FA,CKzHA,oCACA,iBAAA,CACA,KAAA,CACA,MAAA,CACA,YAAA,CACA,WL6HA,CK3HA,oBACA,oBAAA,CACA,SL6HA,CM3HA,kCACA,oBAAA,CACA,YAAA,CACA,eAAA,CACA,SAAA,CACA,WN+HA,CM7HA,yBACA,eAAA,CACA,UAAA,CACA,eAAA,CACA,WAAA,CACA,cN+HA,COrEA,4BACA,SAAA,CACA,oBAAA,CACA,WPyEA,COvEA,wCAEA,ePyEA,COtEA,oBACA,oBAAA,CACA,SPwEA,COtEA,oBACA,oBAAA,CACA,WAAA,CACA,gBAAA,CACA,wBAAA,CACA,YAAA,CACA,UPwEA,COrEA,mBACA,aPuEA,CQxHA,4BACA,SAAA,CACA,oBAAA,CACA,WR4HA,CQ1HA,wCAEA,eR4HA,CQzHA,oBACA,oBAAA,CACA,SR2HA,CQzHA,oBACA,oBAAA,CACA,WAAA,CACA,gBAAA,CACA,wBAAA,CACA,YR2HA,CQzHA,mBACA,aR2HA,CS7FA,wEAEA,6BAAA,CAAA,qBTkGA,CShGA,6DAEA,STkGA,CShGA,wCAEA,eTkGA,CS/FA,oBACA,oBAAA,CACA,STiGA,CS/FA,oBACA,oBAAA,CACA,WAAA,CACA,gBAAA,CACA,wBAAA,CACA,YAAA,CACA,UTiGA,CS9FA,mBACA,aTgGA","file":"app.de24c501.css","sourcesContent":["<template>\n  <div id=\"app\">\n    <h1>Weather Service</h1>\n    <router-view/>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'app'\n}\n</script>\n\n<style>\n#app {\n  font-family: 'Avenir', Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  color: #2c3e50;\n  width: 75%;\n  margin: 20px auto;\n}\n</style>\n","\n#app {\n  font-family: 'Avenir', Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  color: #2c3e50;\n  width: 75%;\n  margin: 20px auto;\n}\n\n\n.weatherSummary[data-v-1fef7f2e] {\n  display: inline-block;\n  width: 100px;\n}\n\n\ndl[data-v-5341d1b8] {\n  padding: 5px;\n  background: #e8e8e8;\n}\ndt[data-v-5341d1b8] {\n  float: left;\n  clear: left;\n  width: 120px;\n  text-align: right;\n  font-weight: bold;\n  color: blue;\n}\ndd[data-v-5341d1b8] {\n  margin: 0 0 0 130px;\n  padding: 0 0 0.5em 0;\n}\ndt[data-v-5341d1b8]::after {\n  content: \":\";\n}\n\n\n.sk-folding-cube[data-v-7323d745] {\n  margin: 20px auto;\n  width: 40px;\n  height: 40px;\n  position: relative;\n  -webkit-transform: rotateZ(45deg);\n          transform: rotateZ(45deg);\n}\n.sk-folding-cube .sk-cube[data-v-7323d745] {\n  float: left;\n  width: 50%;\n  height: 50%;\n  position: relative;\n  -webkit-transform: scale(1.1);\n          transform: scale(1.1);\n}\n.sk-folding-cube .sk-cube[data-v-7323d745]:before {\n  content: '';\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background-color: #333;\n  -webkit-animation: sk-foldCubeAngle-data-v-7323d745 2.4s infinite linear both;\n          animation: sk-foldCubeAngle-data-v-7323d745 2.4s infinite linear both;\n  -webkit-transform-origin: 100% 100%;\n          transform-origin: 100% 100%;\n}\n.sk-folding-cube .sk-cube2[data-v-7323d745] {\n  -webkit-transform: scale(1.1) rotateZ(90deg);\n          transform: scale(1.1) rotateZ(90deg);\n}\n.sk-folding-cube .sk-cube3[data-v-7323d745] {\n  -webkit-transform: scale(1.1) rotateZ(180deg);\n          transform: scale(1.1) rotateZ(180deg);\n}\n.sk-folding-cube .sk-cube4[data-v-7323d745] {\n  -webkit-transform: scale(1.1) rotateZ(270deg);\n          transform: scale(1.1) rotateZ(270deg);\n}\n.sk-folding-cube .sk-cube2[data-v-7323d745]:before {\n  -webkit-animation-delay: 0.3s;\n          animation-delay: 0.3s;\n}\n.sk-folding-cube .sk-cube3[data-v-7323d745]:before {\n  -webkit-animation-delay: 0.6s;\n          animation-delay: 0.6s;\n}\n.sk-folding-cube .sk-cube4[data-v-7323d745]:before {\n  -webkit-animation-delay: 0.9s;\n          animation-delay: 0.9s;\n}\n@-webkit-keyframes sk-foldCubeAngle-data-v-7323d745 {\n0%, 10% {\n    -webkit-transform: perspective(140px) rotateX(-180deg);\n            transform: perspective(140px) rotateX(-180deg);\n    opacity: 0;\n}\n25%, 75% {\n    -webkit-transform: perspective(140px) rotateX(0deg);\n            transform: perspective(140px) rotateX(0deg);\n    opacity: 1;\n}\n90%, 100% {\n    -webkit-transform: perspective(140px) rotateY(180deg);\n            transform: perspective(140px) rotateY(180deg);\n    opacity: 0;\n}\n}\n@keyframes sk-foldCubeAngle-data-v-7323d745 {\n0%, 10% {\n    -webkit-transform: perspective(140px) rotateX(-180deg);\n            transform: perspective(140px) rotateX(-180deg);\n    opacity: 0;\n}\n25%, 75% {\n    -webkit-transform: perspective(140px) rotateX(0deg);\n            transform: perspective(140px) rotateX(0deg);\n    opacity: 1;\n}\n90%, 100% {\n    -webkit-transform: perspective(140px) rotateY(180deg);\n            transform: perspective(140px) rotateY(180deg);\n    opacity: 0;\n}\n}\n/* Spinner animation and markup borrowed from SpinKit by @tobiasahlin - http://tobiasahlin.com/spinkit/ */\n\n\n.message[data-v-51c4bc44] {\n  margin: 5px auto;\n  padding: 5px;\n  font-size: 1rem;\n  width: 60%;\n}\n.error[data-v-51c4bc44] {\n  background: pink;\n  color: red;\n}\n.success[data-v-51c4bc44] {\n  background: green;\n  color: white;\n}\n.info[data-v-51c4bc44] {\n  background: blue;\n  color: white;\n}\n\n\n.message-container[data-v-7ce6d2ef] {\n  position: absolute;\n  top: 0;\n  left: 0;\n  z-index: 1000;\n  width: 100vw;\n}\nul[data-v-7ce6d2ef] {\n  list-style-type: none;\n  padding: 0;\n}\n\n\n.favorite-cities[data-v-e4cfe61c] {\n  list-style-type: none;\n  padding: 10px;\n  background: #ccc;\n  width: 25%;\n  float: right;\n}\n.remove[data-v-e4cfe61c] {\n  font-size: 0.8rem;\n  color: white;\n  background: #aa0000;\n  padding: 2px;\n  cursor: pointer;\n}\n\n\n.errors li[data-v-48e61809] {\n  color: red;\n  border: solid red 1px;\n  padding: 5px;\n}\nh1[data-v-48e61809],\nh2[data-v-48e61809] {\n  font-weight: normal;\n}\nul[data-v-48e61809] {\n  list-style-type: none;\n  padding: 0;\n}\nli[data-v-48e61809] {\n  display: inline-block;\n  width: 300px;\n  min-height: 300px;\n  border: solid 1px #e8e8e8;\n  padding: 10px;\n  margin: 5px;\n}\na[data-v-48e61809] {\n  color: #42b983;\n}\n\n\n.errors li[data-v-dfa5d090] {\n  color: red;\n  border: solid red 1px;\n  padding: 5px;\n}\nh1[data-v-dfa5d090],\nh2[data-v-dfa5d090] {\n  font-weight: normal;\n}\nul[data-v-dfa5d090] {\n  list-style-type: none;\n  padding: 0;\n}\nli[data-v-dfa5d090] {\n  display: inline-block;\n  width: 300px;\n  min-height: 300px;\n  border: solid 1px #e8e8e8;\n  padding: 10px;\n}\na[data-v-dfa5d090] {\n  color: #42b983;\n}\n\n\n.fade-enter-active[data-v-5841b2e3],\n.fade-leave-active[data-v-5841b2e3] {\n  -webkit-transition: opacity 1s;\n  transition: opacity 1s;\n}\n.fade-enter[data-v-5841b2e3],\n.fade-leave-to[data-v-5841b2e3] {\n  opacity: 0;\n}\nh1[data-v-5841b2e3],\nh2[data-v-5841b2e3] {\n  font-weight: normal;\n}\nul[data-v-5841b2e3] {\n  list-style-type: none;\n  padding: 0;\n}\nli[data-v-5841b2e3] {\n  display: inline-block;\n  width: 200px;\n  min-height: 300px;\n  border: solid 1px #e8e8e8;\n  padding: 10px;\n  margin: 5px;\n}\na[data-v-5841b2e3] {\n  color: #42b983;\n}\n\n\n/*# sourceMappingURL=app.de24c501.css.map*/","<template>\n    <div>\n        <div v-for=\"(weatherSummary,index) in weatherData\" :key=\"index\" class=\"weatherSummary\">\n            <img v-bind:src=\"'http://openweathermap.org/img/w/' + weatherSummary.icon + '.png'\" v-bind:alt=\"weatherSummary.main\">\n            <br>\n            <b>{{ weatherSummary.main }}</b>\n        </div>\n    </div>\n</template>\n\n<script>\nexport default {\n  name: 'WeatherSummary',\n  data () {\n    return {\n\n    }\n  },\n  props: {\n    weatherData: Array\n  }\n}\n</script>\n\n<style scoped>\n.weatherSummary {\n  display: inline-block;\n  width: 100px;\n}\n</style>","<template>\n    <dl>\n        <dt v-if=\"weatherData.temp != weatherData.temp_min\">Current Temp</dt>\n        <dd v-if=\"weatherData.temp != weatherData.temp_min\">{{ weatherData.temp }}&deg;F</dd>\n        <dt>Humidity</dt>\n        <dd>{{ weatherData.humidity }}%</dd>\n        <dt>High</dt>\n        <dd>{{ weatherData.temp_max }}&deg;F</dd>\n        <dt>Low</dt>\n        <dd>{{ weatherData.temp_min }}&deg;F</dd>\n    </dl>\n</template>\n\n<script>\nexport default {\n  name: 'WeatherData',\n  data () {\n    return {\n\n    }\n  },\n  props: {\n    weatherData: Object\n  }\n}\n</script>\n\n<style scoped>\ndl {\n  padding: 5px;\n  background: #e8e8e8;\n}\ndt {\n  float: left;\n  clear: left;\n  width: 120px;\n  text-align: right;\n  font-weight: bold;\n  color: blue;\n}\ndd {\n  margin: 0 0 0 130px;\n  padding: 0 0 0.5em 0;\n}\ndt::after {\n  content: \":\";\n}\n</style>","<template>\n    <div>\n        <h2>Loading...</h2>\n        <div class=\"sk-folding-cube\">\n          <div class=\"sk-cube1 sk-cube\"></div>\n          <div class=\"sk-cube2 sk-cube\"></div>\n          <div class=\"sk-cube4 sk-cube\"></div>\n          <div class=\"sk-cube3 sk-cube\"></div>\n        </div>\n    </div>\n</template>\n\n<script>\nexport default {\n  name: 'CubeSpinner'\n}\n</script>\n\n<style scoped>\n.sk-folding-cube {\n  margin: 20px auto;\n  width: 40px;\n  height: 40px;\n  position: relative;\n  -webkit-transform: rotateZ(45deg);\n          transform: rotateZ(45deg);\n}\n\n.sk-folding-cube .sk-cube {\n  float: left;\n  width: 50%;\n  height: 50%;\n  position: relative;\n  -webkit-transform: scale(1.1);\n      -ms-transform: scale(1.1);\n          transform: scale(1.1);\n}\n.sk-folding-cube .sk-cube:before {\n  content: '';\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background-color: #333;\n  -webkit-animation: sk-foldCubeAngle 2.4s infinite linear both;\n          animation: sk-foldCubeAngle 2.4s infinite linear both;\n  -webkit-transform-origin: 100% 100%;\n      -ms-transform-origin: 100% 100%;\n          transform-origin: 100% 100%;\n}\n.sk-folding-cube .sk-cube2 {\n  -webkit-transform: scale(1.1) rotateZ(90deg);\n          transform: scale(1.1) rotateZ(90deg);\n}\n.sk-folding-cube .sk-cube3 {\n  -webkit-transform: scale(1.1) rotateZ(180deg);\n          transform: scale(1.1) rotateZ(180deg);\n}\n.sk-folding-cube .sk-cube4 {\n  -webkit-transform: scale(1.1) rotateZ(270deg);\n          transform: scale(1.1) rotateZ(270deg);\n}\n.sk-folding-cube .sk-cube2:before {\n  -webkit-animation-delay: 0.3s;\n          animation-delay: 0.3s;\n}\n.sk-folding-cube .sk-cube3:before {\n  -webkit-animation-delay: 0.6s;\n          animation-delay: 0.6s;\n}\n.sk-folding-cube .sk-cube4:before {\n  -webkit-animation-delay: 0.9s;\n          animation-delay: 0.9s;\n}\n@-webkit-keyframes sk-foldCubeAngle {\n  0%, 10% {\n    -webkit-transform: perspective(140px) rotateX(-180deg);\n            transform: perspective(140px) rotateX(-180deg);\n    opacity: 0;\n  } 25%, 75% {\n    -webkit-transform: perspective(140px) rotateX(0deg);\n            transform: perspective(140px) rotateX(0deg);\n    opacity: 1;\n  } 90%, 100% {\n    -webkit-transform: perspective(140px) rotateY(180deg);\n            transform: perspective(140px) rotateY(180deg);\n    opacity: 0;\n  }\n}\n\n@keyframes sk-foldCubeAngle {\n  0%, 10% {\n    -webkit-transform: perspective(140px) rotateX(-180deg);\n            transform: perspective(140px) rotateX(-180deg);\n    opacity: 0;\n  } 25%, 75% {\n    -webkit-transform: perspective(140px) rotateX(0deg);\n            transform: perspective(140px) rotateX(0deg);\n    opacity: 1;\n  } 90%, 100% {\n    -webkit-transform: perspective(140px) rotateY(180deg);\n            transform: perspective(140px) rotateY(180deg);\n    opacity: 0;\n  }\n}\n/* Spinner animation and markup borrowed from SpinKit by @tobiasahlin - http://tobiasahlin.com/spinkit/ */\n</style>","<template>\n  <transition name=\"fade\" appear tag=\"div\">\n    <li v-bind:class=\"[message.type, 'message']\" v-show=\"showMessage\">\n      {{ message.text }}\n      <button v-on:click=\"close\">close</button>\n    </li>\n  </transition>\n</template>\n\n<script>\nrequire('vue2-animate/dist/vue2-animate.min.css');\n// Each Message Item expects a `message` object.\n// Each message should have the following properties:\n// message.type - A string indicating the type. Either \"info\", \"success\", or \"error\"\n// message.text - The text of the message. Text only, no HTML formatting.\n\nexport default {\n  name: 'MessageContainer',\n  props: {\n    message: Object\n  },\n  data () {\n    return {\n      showMessage: true\n    }\n  },\n  methods: {\n    close: function () {\n      this.showMessage = false;\n    }\n  },\n  created () {\n    setTimeout(this.close, 5000);\n  }\n}\n</script>\n\n<style scoped>\n.message {\n  margin: 5px auto;\n  padding: 5px;\n  font-size: 1rem;\n  width: 60%;\n}\n.error {\n  background: pink;\n  color: red;\n}\n.success {\n  background: green;\n  color: white;\n}\n.info {\n  background: blue;\n  color: white;\n}\n</style>","<template>\n  <div class=\"message-container\">\n    <ul v-if=\"messages.length > 0\">\n        <message-item v-for=\"(msg, index) in messages\" v-bind:message=\"msg\" v-bind:key=\"index\"></message-item>\n    </ul>\n  </div>\n</template>\n\n<script>\nimport MessageItem from '@/components/MessageItem';\nrequire('vue2-animate/dist/vue2-animate.min.css');\n\nexport default {\n  name: 'MessageContainer',\n  props: {\n    messages: Array\n  },\n  components: {\n    'message-item': MessageItem\n  }\n}\n</script>\n\n<style scoped>\n.message-container {\n  position: absolute;\n  top: 0;\n  left: 0;\n  z-index: 1000;\n  width: 100vw;\n}\nul {\n  list-style-type: none;\n  padding: 0;\n}\n</style>","<template>\n  <ul class=\"favorite-cities\">\n    <li>\n      <h2>Favorite Cities</h2>\n    </li>\n    <li v-if=\"favoriteCities.length < 1\">No favorites cities to display.</li>\n    <li v-for=\"(city,index) in favoriteCities\" :key=\"index\">\n      <router-link\n        v-bind:to=\"{ name: 'CurrentWeather', params: { cityId: city.id } }\"\n      >{{ city.name }}</router-link>\n      <button v-on:click=\"removeCity(city)\" class=\"remove\">x</button>\n    </li>\n  </ul>\n</template>\n\n<script>\nexport default {\n  name: \"FavoriteCities\",\n  data() {\n    return {};\n  },\n  props: {\n    favoriteCities: Array\n  },\n  methods: {\n    removeCity: function(city) {\n      let cityIndex = this.favoriteCities.indexOf(city);\n      this.favoriteCities.splice(cityIndex, 1);\n      this.$ls.set(\"favoriteCities\", this.favoriteCities);\n    }\n  }\n};\n</script>\n\n<style scoped>\n.favorite-cities {\n  list-style-type: none;\n  padding: 10px;\n  background: #ccc;\n  width: 25%;\n  float: right;\n}\n.remove {\n  font-size: 0.8rem;\n  color: white;\n  background: #aa0000;\n  padding: 2px;\n  cursor: pointer;\n}\n</style>","<template>\n  <div>\n    <favorite-cities v-bind:favoriteCities=\"favorites\"></favorite-cities>\n    <h2>City Search</h2>\n    <message-container v-bind:messages=\"messages\"></message-container>\n    <form v-on:submit.prevent=\"getCities\">\n      <p>\n        Enter city name:\n        <input type=\"text\" v-model=\"query\" placeholder=\"Paris\">\n        <button type=\"submit\">Go</button>\n      </p>\n    </form>\n    <load-spinner v-if=\"showLoading\"></load-spinner>\n    <ul class=\"cities\" v-if=\"results && results.list.length > 0\">\n      <li v-for=\"(city,index) in results.list\" :key=\"index\">\n        <h2>{{ city.name }}, {{ city.sys.country }}</h2>\n        <p>\n          <router-link\n            v-bind:to=\"{ name: 'CurrentWeather', params: { cityId: city.id } }\"\n          >View Current Weather</router-link>\n        </p>\n\n        <weather-summary v-bind:weatherData=\"city.weather\"></weather-summary>\n\n        <weather-data v-bind:weatherData=\"city.main\"></weather-data>\n        <p>\n          <button class=\"save\" v-on:click=\"saveCity(city)\">Save City to Favorites</button>\n        </p>\n      </li>\n    </ul>\n  </div>\n</template>\n\n<script>\nimport { API } from \"@/common/api\";\nimport WeatherSummary from \"@/components/WeatherSummary\";\nimport WeatherData from \"@/components/WeatherData\";\nimport CubeSpinner from \"@/components/CubeSpinner\";\nimport MessageContainer from \"@/components/MessageContainer\";\nimport FavoriteCities from \"@/components/FavoriteCities\";\n\nexport default {\n  name: \"CitySearch\",\n  components: {\n    \"weather-summary\": WeatherSummary,\n    \"weather-data\": WeatherData,\n    \"load-spinner\": CubeSpinner,\n    \"message-container\": MessageContainer,\n    \"favorite-cities\": FavoriteCities\n  },\n  data() {\n    return {\n      results: null,\n      query: \"\",\n      showLoading: false,\n      messages: [],\n      favorites: []\n    };\n  },\n  created() {\n    if (this.$ls.get(\"favoriteCities\")) {\n      this.favorites = this.$ls.get(\"favoriteCities\");\n    }\n  },\n  methods: {\n    saveCity: function(city) {\n      this.favorites.push(city);\n      this.$ls.set(\"favoriteCities\", this.favorites);\n    },\n    getCities: function() {\n      this.results = null;\n      this.showLoading = true;\n      let cacheLabel = \"citySearch_\" + this.query;\n      let cacheExpiry = 15 * 60 * 1000; // 15 minutes\n      if (this.$ls.get(cacheLabel)) {\n        console.log(\"Cached query detected.\");\n        this.results = this.$ls.get(cacheLabel);\n        this.showLoading = false;\n      } else {\n        console.log(\"Data from API\");\n        API.get(\"find\", {\n          params: {\n            q: this.query\n          }\n        })\n          .then(response => {\n            this.results = response.data;\n            this.$ls.set(cacheLabel, response.data, cacheExpiry);\n            console.log(\"New query has been cached as: \" + cacheLabel);\n            this.showLoading = false;\n          })\n          .catch(error => {\n            this.messages.push({\n              type: \"error\",\n              text: error.message\n            });\n            this.showLoading = false;\n          });\n      }\n    }\n  }\n};\n</script>\n\n<style scoped>\n.errors li {\n  color: red;\n  border: solid red 1px;\n  padding: 5px;\n}\nh1,\nh2 {\n  font-weight: normal;\n}\n\nul {\n  list-style-type: none;\n  padding: 0;\n}\nli {\n  display: inline-block;\n  width: 300px;\n  min-height: 300px;\n  border: solid 1px #e8e8e8;\n  padding: 10px;\n  margin: 5px;\n}\n\na {\n  color: #42b983;\n}\n</style>\n\n\n","<template>\n  <div>\n    <h2>\n      Current Weather\n      <span\n        v-if=\"weatherData\"\n      >for {{ weatherData.name }}, {{weatherData.sys.country }}</span>\n    </h2>\n    <message-container v-bind:messages=\"messages\"></message-container>\n    <p>\n      <router-link to=\"/\">Home</router-link>|\n      <router-link\n        v-bind:to=\"{ name: 'Forecast', params: { cityId: $route.params.cityId } }\"\n      >View 5-Day Forecast</router-link>\n    </p>\n    <load-spinner v-if=\"showLoading\"></load-spinner>\n    <div v-if=\"weatherData\">\n      <weather-summary v-bind:weatherData=\"weatherData.weather\"></weather-summary>\n\n      <weather-data v-bind:weatherData=\"weatherData.main\"></weather-data>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { API } from \"@/common/api\";\nimport WeatherSummary from \"@/components/WeatherSummary\";\nimport WeatherData from \"@/components/WeatherData\";\nimport CubeSpinner from \"@/components/CubeSpinner\";\nimport MessageContainer from \"@/components/MessageContainer\";\n\nexport default {\n  name: \"CurrentWeather\",\n  components: {\n    \"weather-summary\": WeatherSummary,\n    \"weather-data\": WeatherData,\n    \"load-spinner\": CubeSpinner,\n    \"message-container\": MessageContainer\n  },\n  data() {\n    return {\n      weatherData: null,\n      messages: [],\n      query: \"\",\n      showLoading: false\n    };\n  },\n  created() {\n    this.showLoading = true;\n    let cacheLabel = \"currentWeather_\" + this.$route.params.cityId;\n    let cacheExpiry = 15 * 60 * 1000; // 15 minutes\n    if (this.$ls.get(cacheLabel)) {\n      console.log(\"Cached query detected.\");\n      this.weatherData = this.$ls.get(cacheLabel);\n      this.showLoading = false;\n    } else {\n      API.get(\"weather\", {\n        params: {\n          id: this.$route.params.cityId\n        }\n      })\n        .then(response => {\n          this.showLoading = false;\n          this.weatherData = response.data;\n          this.$ls.set(cacheLabel, response.data, cacheExpiry);\n          console.log(\"New query has been cached as: \" + cacheLabel);\n        })\n        .catch(error => {\n          this.showLoading = false;\n          this.messages.push({\n            type: \"error\",\n            text: error.message\n          });\n        });\n    }\n  }\n};\n</script>\n\n<style scoped>\n.errors li {\n  color: red;\n  border: solid red 1px;\n  padding: 5px;\n}\nh1,\nh2 {\n  font-weight: normal;\n}\n\nul {\n  list-style-type: none;\n  padding: 0;\n}\nli {\n  display: inline-block;\n  width: 300px;\n  min-height: 300px;\n  border: solid 1px #e8e8e8;\n  padding: 10px;\n}\na {\n  color: #42b983;\n}\n</style>\n\n\n","<template>\n  <div>\n    <h2>\n      Five Day Hourly Forecast\n      <span\n        v-if=\"weatherData\"\n      >for {{ weatherData.city.name }}, {{weatherData.city.country }}</span>\n    </h2>\n    <message-container v-bind:messages=\"messages\"></message-container>\n    <p>\n      <router-link to=\"/\">Home</router-link>|\n      <router-link v-bind:to=\"{ name: 'CurrentWeather', params: { cityId: $route.params.cityId } }\">\n        Current Weather\n        <span\n          v-if=\"weatherData\"\n        >for {{ weatherData.city.name }}, {{weatherData.city.country }}</span>\n      </router-link>\n    </p>\n\n    <ul v-if=\"weatherData\" class=\"forecast\">\n      <transition-group name=\"fade\" tag=\"div\" appear>\n        <li v-for=\"forecast in weatherData.list\" v-bind:key=\"forecast.dt\">\n          <h3>{{ forecast.dt|formatDate }}</h3>\n          <weather-summary v-bind:weatherData=\"forecast.weather\"></weather-summary>\n          <weather-data v-bind:weatherData=\"forecast.main\"></weather-data>\n        </li>\n      </transition-group>\n    </ul>\n    <load-spinner v-if=\"showLoading\"></load-spinner>\n  </div>\n</template>\n\n<script>\nimport { API } from \"@/common/api\";\nimport WeatherSummary from \"@/components/WeatherSummary\";\nimport WeatherData from \"@/components/WeatherData\";\nimport CubeSpinner from \"@/components/CubeSpinner\";\nimport MessageContainer from \"@/components/MessageContainer\";\n\nexport default {\n  name: \"Forecast\",\n  components: {\n    \"weather-summary\": WeatherSummary,\n    \"weather-data\": WeatherData,\n    \"message-container\": MessageContainer,\n    \"load-spinner\": CubeSpinner\n  },\n  data() {\n    return {\n      weatherData: null,\n      messages: [],\n      query: \"\",\n      showLoading: false,\n      messages: []\n    };\n  },\n  created() {\n    this.showLoading = true;\n    let cacheLabel = \"forecast_\" + this.$route.params.cityId;\n    let cacheExpiry = 15 * 60 * 1000; // 15 minutes\n    if (this.$ls.get(cacheLabel)) {\n      console.log(\"Cached query detected.\");\n      this.weatherData = this.$ls.get(cacheLabel);\n      this.showLoading = false;\n    } else {\n      API.get(\"forecast\", {\n        params: {\n          id: this.$route.params.cityId\n        }\n      })\n        .then(response => {\n          this.showLoading = false;\n          this.weatherData = response.data;\n          this.$ls.set(cacheLabel, response.data, cacheExpiry);\n        })\n        .catch(error => {\n          this.showLoading = false;\n          this.messages.push({\n            type: \"error\",\n            text: error.message\n          });\n        });\n    }\n  },\n  filters: {\n    formatDate: function(timestamp) {\n      let date = new Date(timestamp * 1000);\n      const months = [\n        \"January\",\n        \"February\",\n        \"March\",\n        \"April\",\n        \"May\",\n        \"June\",\n        \"July\",\n        \"August\",\n        \"September\",\n        \"October\",\n        \"November\",\n        \"December\"\n      ];\n      const weekdays = [\n        \"Sunday\",\n        \"Monday\",\n        \"Tuesday\",\n        \"Wednesday\",\n        \"Thursday\",\n        \"Friday\",\n        \"Saturday\"\n      ];\n      //let weekday = date.getDay();\n      let daynum = date.getDate();\n      let month = date.getMonth();\n\n      let hour = date.getHours();\n      if (hour === 12) {\n        hour = \"Noon\";\n      } else if (hour === 0) {\n        hour = \"Midnight\";\n      } else if (hour > 12) {\n        hour = hour - 12 + \"PM\";\n      } else if (hour < 12) {\n        hour = hour + \"AM\";\n      }\n      //let year = date.getFullYear();\n      return `${months[month]} ${daynum} @ ${hour}`;\n    }\n  }\n};\n</script>\n\n<style scoped>\n.fade-enter-active,\n.fade-leave-active {\n  transition: opacity 1s;\n}\n.fade-enter,\n.fade-leave-to {\n  opacity: 0;\n}\nh1,\nh2 {\n  font-weight: normal;\n}\n\nul {\n  list-style-type: none;\n  padding: 0;\n}\nli {\n  display: inline-block;\n  width: 200px;\n  min-height: 300px;\n  border: solid 1px #e8e8e8;\n  padding: 10px;\n  margin: 5px;\n}\n\na {\n  color: #42b983;\n}\n</style>\n\n\n"]}